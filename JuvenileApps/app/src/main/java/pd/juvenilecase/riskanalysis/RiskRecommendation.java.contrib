//Source file: C:\\views\\CommonSupervision\\app\\src\\pd\\juvenilecase\\RiskRecommendation.java

package pd.juvenilecase.riskanalysis;

import java.util.Iterator;
import pd.codetable.ICodetable;
import mojo.km.persistence.Home;
import mojo.km.persistence.IHome;
import mojo.km.persistence.PersistentObject;

public class RiskRecommendation extends PersistentObject implements ICodetable
{
   private String assessmentType;
   private int minValue;
   private int maxValue;
   private String recommendation;
   private boolean custody;
   
   /**
    * @roseuid 433D86E200DB
    */
   public RiskRecommendation() 
   {
   }
   
   /**
    * @roseuid 433C3D3D01C2
    */
   public static Iterator findAllByAssessmentType(String attributeName, String attributeValue) 
   {
		IHome home = new Home();
		
		return home.findAll(attributeName, attributeValue, RiskRecommendation.class);
   }
	/**
	 * @return
	 */
	public String getAssessmentType()
	{
		fetch();
		return assessmentType;
	}
	
	/**
	 * @return
	 */
	public int getMaxValue()
	{
		fetch();
		return maxValue;
	}
	
	/**
	 * @return
	 */
	public int getMinValue()
	{
		fetch();
		return minValue;
	}
	
	/**
	 * @return
	 */
	public String getRecommendation()
	{
		fetch();
		return recommendation;
	}
	
	/**
	 * @param string
	 */
	public void setAssessmentType(String string)
	{
		if (this.assessmentType == null || !this.assessmentType.equals(string)) {
			markModified();
		}

		assessmentType = string;
	}
	
	/**
	 * @param i
	 */
	public void setMaxValue(int i)
	{
		if (this.maxValue != i) {
			markModified();
		}
		maxValue = i;
	}
	
	/**
	 * @param i
	 */
	public void setMinValue(int i)
	{
		if (this.minValue != i) {
			markModified();
		}
		minValue = i;
	}
	
	/**
	 * @param string
	 */
	public void setRecommendation(String string)
	{
		if (this.recommendation == null || !this.recommendation.equals(string)) {
			markModified();
		}
		recommendation = string;
	}

	/**
	 * @return
	 */
	public boolean isCustody()
	{
		fetch();
		return custody;
	}
	
	/**
	 * @param b
	 */
	public void setCustody(boolean b)
	{
		if (this.custody != b) {
			markModified();
		}
		custody = b;
	}

	public Iterator findAll() {
		IHome home = new Home();
		return home.findAll(RiskRecommendation.class);
	}

	public void inActivate() {
		// TODO Auto-generated method stub
		
	}

}

//Source file: C:\\views\\CommonSupervision\\app\\src\\pd\\juvenilecase\\transactions\\CheckResidentialPreConditionsCommand.java

package pd.juvenilecase.riskanalysis.transactions;

import java.util.Iterator;

import messaging.juvenilecase.reply.CourtReferralAssessmentEvent;
import messaging.juvenilecase.reply.CourtReferralCompletionPreConditionFailedResponseEvent;
import messaging.riskanalysis.CheckCourtReferralCompletionPreconditionsEvent;
import mojo.km.context.ICommand;
import mojo.km.dispatch.EventManager;
import mojo.km.dispatch.IDispatch;
import mojo.km.messaging.IEvent;
import naming.RiskAnalysisConstants;
import pd.codetable.criminal.JuvenileDispositionCode;
import pd.juvenilecase.JuvenileCasefile;
import pd.juvenilecase.interviewinfo.InterviewHelper;
import pd.juvenilecase.referral.JJSReferral;
import pd.juvenilecase.riskanalysis.RiskAnalysis;
import pd.juvenilecase.riskanalysis.RiskAnalysisCourtReferral;
import pd.juvenilecase.riskanalysis.RiskAnswer;

public class CheckCourtReferralCompletionPreconditionsCommand implements ICommand 
{
   
   /**
    * @roseuid 4357DD180205
    */
   public CheckCourtReferralCompletionPreconditionsCommand() 
   {
    
   }
   
   /**
    * @param event
    * @roseuid 4357D9AF0229
    */
   public void execute(IEvent event) 
   {
	    
		IDispatch dispatch = EventManager.getSharedInstance(EventManager.REPLY);
		CheckCourtReferralCompletionPreconditionsEvent preCondEvent = (CheckCourtReferralCompletionPreconditionsEvent) event;
		
		RiskAnalysis riskAnalysis = RiskAnalysis.find(preCondEvent.getRiskAnalysisId());
		
		if (!riskAnalysis.isCompleted()) 
		{
			//Get Case File information
			JuvenileCasefile juvCaseFile = JuvenileCasefile.find(preCondEvent.getCaseFileId());
			
			/***** 1. Start - Validate Reporting Referral ***************************************************************************/
			
			boolean reportingReferralMatched = false;
			String reportingReferral = "";
			
			// Retrieves all the responses associated with the RISK_ANALYSIS_ID
			Iterator<RiskAnswer> riskAnswers = RiskAnswer.findAll( 
					RiskAnalysisConstants.RISK_ANALYSIS_ID, preCondEvent.getRiskAnalysisId() );
			
			//Find reporting referral # supplied by user
			while(riskAnswers.hasNext())
			{
				RiskAnswer riskAnswer = riskAnswers.next();
				if (riskAnswer.getQuestionText().equalsIgnoreCase("Reporting Referral #:")) 
				{
					reportingReferral = riskAnswer.getText();
					break;
				}
			}
			
			//Attempt to find match for reporting referral within
			//referrals attached to casefile
			JJSReferral referral = null;
			if (reportingReferral.length() > 0)
			{
				Iterator<JJSReferral> casefileReferralsIter1 = InterviewHelper.getReferralsForJuvenilesCasefile(juvCaseFile.getJuvenile(), juvCaseFile.getOID()).iterator();
			    while (casefileReferralsIter1.hasNext())
				{
					referral = casefileReferralsIter1.next();
					if (reportingReferral.equalsIgnoreCase(referral.getReferralNum()))
					{
						reportingReferralMatched = true;
						break;
					}
				}
			}
			
			//If reporting referral is not found within referrals attached, dispatch a failed event
			if (!reportingReferralMatched) 
			{
				CourtReferralCompletionPreConditionFailedResponseEvent preCondFailedEvent 
					= new CourtReferralCompletionPreConditionFailedResponseEvent();
				preCondFailedEvent.setMessage( "1");
				dispatch.postEvent( preCondFailedEvent );
			}
			
			/***** 1. End - Validate Reporting Referral ********************************************************************************/
			
			/***** 2. Start - Validate Reporting Referral Date of Disposition **********************************************************/
			boolean reportingReferralDispositionDateValid = false;
			
			if (reportingReferralMatched) 
			{
				//Is date of dispostion (CourtDate) is equal to or greater then JPO assignment date 
				//for the current casefile
				if ( referral.getCourtDate() != null 
						&& juvCaseFile.getJpoAssignmentDate() != null 
						&& referral.getCourtDate().compareTo(juvCaseFile.getJpoAssignmentDate()) >= 0) 
				{
					reportingReferralDispositionDateValid = true;
				}
				
				//int test = referral.getCourtDate().compareTo(juvCaseFile.getJpoAssignmentDate());
				
				//If date of dispostion is not equal to or greater then JPO assignment date 
				//for the current casefile, dispatch a failed event
				if (!reportingReferralDispositionDateValid) 
				{
					CourtReferralCompletionPreConditionFailedResponseEvent preCondFailedEvent 
						= new CourtReferralCompletionPreConditionFailedResponseEvent();
					preCondFailedEvent.setMessage( "2");
					dispatch.postEvent( preCondFailedEvent );
				}
				
			}
			
			/***** 2. End - Validate Reporting Referral Date of Disposition *************************************************************/
			
			/***** 3. Start - Validate Reporting Referral Final Disposition *************************************************************/
			
			
			boolean codeIsAFinalDisposition = false;
			String jjsCourtDecision = "";
			
			if (reportingReferralMatched && reportingReferralDispositionDateValid) 
			{
				//Figure which code to use to fill in JuvenileDispositionCode
				JuvenileDispositionCode juvenileDispositionCode = null;
				if (referral.getCourtDispositionId() != null 
						&& referral.getCourtDispositionId().length() > 0) {
					juvenileDispositionCode = referral.getCourtDisposition();
				} else if (referral.getCourtResultId() != null
						&& referral.getCourtResultId().length() > 0) {
					juvenileDispositionCode = referral.getCourtResult();
				}
				
				//Find out if code is a final disposition
				if (juvenileDispositionCode != null) 
				{
					if (juvenileDispositionCode.getDispositionCode() != null 
							&& juvenileDispositionCode.getDispositionCode().length() > 0)  
					{
						codeIsAFinalDisposition = true;
						jjsCourtDecision = juvenileDispositionCode.getShortDesc();
						//jjsCourtDecision = juvenileDispositionCode.getLongDesc();
					}
					
				}
				
				//if code is not a final disposition, dispatch a failed event
				if (!codeIsAFinalDisposition) 
				{
					CourtReferralCompletionPreConditionFailedResponseEvent preCondFailedEvent 
						= new CourtReferralCompletionPreConditionFailedResponseEvent();
					preCondFailedEvent.setMessage( "3");
					dispatch.postEvent( preCondFailedEvent );
				}
				
			}
		   	
			/***** 3. End - Validate Reporting Referral Final Disposition *************************************************************/
			
			//If no errors occur, send back jjsCourtDecision for display purposes
		   	CourtReferralAssessmentEvent courtReferralAssessmentEvent = new CourtReferralAssessmentEvent();
		   	courtReferralAssessmentEvent.setJjsCourtDecision(jjsCourtDecision);
		   	dispatch.postEvent( courtReferralAssessmentEvent );
		   	
			

		//Is completed 
		} else {
			
		   	//RiskAnalysisCourtReferral riskCourtReferral = RiskAnalysisCourtReferral.find( preCondEvent.getRiskAnalysisId() );
		   	RiskAnalysisCourtReferral riskCourtReferral = null;
		   	Iterator<RiskAnalysisCourtReferral> riskCourtReferralIter = RiskAnalysisCourtReferral.findAllByAttributeName( RiskAnalysisConstants.RISK_ANALYSIS_ID, preCondEvent.getRiskAnalysisId() );
		   	while(riskCourtReferralIter.hasNext()) {
		   		riskCourtReferral = riskCourtReferralIter.next();
				break;
			}
		   	
		   	CourtReferralAssessmentEvent courtReferralAssessmentEvent = new CourtReferralAssessmentEvent();
			courtReferralAssessmentEvent.setCasefileId(String.valueOf(riskAnalysis.getCasefileID()));
			courtReferralAssessmentEvent.setAssessmentType( riskAnalysis.getAssessmentType() );
			courtReferralAssessmentEvent.setEnteredDate( riskAnalysis.getEnteredDate() );
			
			if (riskCourtReferral.getCollateralVisits() > -1) 
			{
				courtReferralAssessmentEvent.setCollateralVisits( String.valueOf(riskCourtReferral.getCollateralVisits()) ) ;
			}
			if (riskCourtReferral.getFace2FaceVisits() > -1) 
			{
				courtReferralAssessmentEvent.setFace2FaceVisits( String.valueOf(riskCourtReferral.getFace2FaceVisits()) ) ;
			}
			courtReferralAssessmentEvent.setCourtDispositionTJPC(riskCourtReferral.getCourtDispositionTJPC());
			//courtReferralAssessmentEvent.setJjsCourtDecision(riskCourtReferral.getJjsCourtDecision());
			courtReferralAssessmentEvent.setJjsCourtDisposition(riskCourtReferral.getJjsCourtDisposition());
			
			/** Start - Get Latest Court Decision ***************************************************************************************/
			
			//Get Case File information
			JuvenileCasefile juvCaseFile = JuvenileCasefile.find(preCondEvent.getCaseFileId());
			
			String reportingReferral = "";
			String jjsCourtDecision = "";
			
			// Retrieves all the responses associated with the RISK_ANALYSIS_ID
			Iterator<RiskAnswer> riskAnswers = RiskAnswer.findAll( 
					RiskAnalysisConstants.RISK_ANALYSIS_ID, preCondEvent.getRiskAnalysisId() );
			while(riskAnswers.hasNext())
			{
				RiskAnswer riskAnswer = riskAnswers.next();
				if (riskAnswer.getQuestionText().equalsIgnoreCase("Reporting Referral #:")) 
				{
					reportingReferral = riskAnswer.getText();
					break;
				}
			}
			
			JJSReferral referral = null;
			if (reportingReferral.length() > 0)
			{
				Iterator<JJSReferral> casefileReferralsIter1 = InterviewHelper.getReferralsForJuvenilesCasefile(juvCaseFile.getJuvenile(), juvCaseFile.getOID()).iterator();
			    while (casefileReferralsIter1.hasNext())
				{
					referral = casefileReferralsIter1.next();
					if (reportingReferral.equalsIgnoreCase(referral.getReferralNum()))
					{
						break; //match found, referral is set
					}
				}
			}
			
			JuvenileDispositionCode juvenileDispositionCode = null;
			if (referral.getCourtDispositionId() != null 
					&& referral.getCourtDispositionId().length() > 0) {
				juvenileDispositionCode = referral.getCourtDisposition();
			} else if (referral.getCourtResultId() != null
					&& referral.getCourtResultId().length() > 0) {
				juvenileDispositionCode = referral.getCourtResult();
			}
			
			//Find out if code is a final disposition
			if (juvenileDispositionCode != null) 
			{
				if (juvenileDispositionCode.getDispositionCode() != null 
						&& juvenileDispositionCode.getDispositionCode().length() > 0)  
				{
					jjsCourtDecision = juvenileDispositionCode.getShortDesc();
					//jjsCourtDecision = juvenileDispositionCode.getLongDesc();
				}
				
			}
			
			courtReferralAssessmentEvent.setJjsCourtDecision(jjsCourtDecision);
			
			/** End - Get Latest Court Decision ***************************************************************************************/
			
			dispatch.postEvent( courtReferralAssessmentEvent );
			
		}
   }
   
  
   /**
    * @param event
    * @roseuid 4357D9AF022B
    */
   public void onRegister(IEvent event) 
   {
    
   }
   
   /**
    * @param event
    * @roseuid 4357D9AF022D
    */
   public void onUnregister(IEvent event) 
   {
    
   }
   
   /**
    * @param anObject
    * @roseuid 4357D9AF0233
    */
   public void update(Object anObject) 
   {
    
   }
}

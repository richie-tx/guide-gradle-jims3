/* Generated by Together */

package mojo.km.context;

import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;

/**
 *Thrown if the is application layer exception.
 *
 * 
 *@author Eric A Amundson
 * @modelguid {4A36917C-6B60-4545-A9E5-49DDD50497C1}
 */
public class AppException extends Exception {
    /**
     *    Constructor
     *    @param msg - error message.
     * @modelguid {E580798C-B21D-48AB-82B4-D36F8409FFBB}
     */
    public AppException(String msg) {
        super(msg);
    }

    /** Default constructor 
     * @modelguid {BA4C9D9C-4DD2-4C34-82DE-B358148AFC61}
     */
    public AppException() {
        super();
    }
    
    /**
     * @param msg - exception message
     * @param wrappedException - the internal exception being wrapped. 
     * @modelguid {0BA5C42D-8A72-4185-ACD4-36031EF13DB3}
     */
    public AppException(String msg, Throwable wrappedException ) {
        this(msg);
        this.wrappedException = wrappedException;
    }

	/** @modelguid {375D9C43-09D4-40E3-9BBE-1844718B8686} */
    public void printStackTrace() {
        synchronized (System.out)
        {
	        super.printStackTrace(System.out);
	        if (this.wrappedException != null) {
	            System.out.println("/-----------------WRAPPED EXCEPTION STACK TRACE FOLLOWS---------------------/");
	            this.wrappedException.printStackTrace(System.out);
	        }
        }
    }
    
    /**
     * @param s - stream to print stack trace to 
     * @modelguid {D355B359-1B38-4624-B72D-B3A66273FF99}
     */
	public void printStackTrace(PrintStream s) {
        synchronized (s)
        {
	        super.printStackTrace(s);
	        if (this.wrappedException != null) {
	            s.println("/-----------------WRAPPED EXCEPTION STACK TRACE FOLLOWS---------------------/");
	            this.wrappedException.printStackTrace(s);
	        }
        }
    }
    
    /**
     * @param s - input stream 
     * @modelguid {52B56265-1042-4886-9EE7-24E5B9524AF1}
     */
    public void printStackTrace(PrintWriter s) {
        synchronized (s)
        {
	        super.printStackTrace(s);
	        if (this.wrappedException != null) {
	            s.println("/-----------------WRAPPED EXCEPTION STACK TRACE FOLLOWS---------------------/");
	            this.wrappedException.printStackTrace(s);
	        }
        }
    }
    
    /**
     * @return - buffer holding stack trace 
     * @modelguid {EF81CA71-3B6D-4E21-8D50-73B466072354}
     */
    public String getLocalStackTrace()
    {
        StringWriter sw = new StringWriter();
        PrintWriter pw = new PrintWriter(sw);
        this.printStackTrace(pw);
        return sw.toString();
    }

	/** @modelguid {88345912-5548-4088-ACBA-3734EA425B82} */
    private Throwable wrappedException;

    /**
     * @param args 
     * @modelguid {D7C2C2EF-58B4-4222-99B0-F51B1A34B533}
     */
    public static void main(String[] args)
    {
        AppException appEx = new AppException("Test", new IOException());

        System.out.println(appEx.getLocalStackTrace());
    }
}

/* Generated by Together */

package mojo.km.utilities;

import java.util.Comparator;
import java.util.Collections;

/** @modelguid {FCA03E5B-EA4A-4389-91AB-5119179F3A14} */
public class PriorityQueue extends Queue {
	/** @modelguid {99F9E467-DBC3-440F-8DFA-0E30D4AC1F38} */
    private Comparator comp = null;

	/** @modelguid {BA5B1E1E-9A70-49EA-867B-4D7E9DC5206F} */
    public PriorityQueue(Comparator c) {
        this.comp = c;
    }

    /*
     * Adds an item to the priority queue and reorders the queue according to
     * the current Comparator.
     * @param anObject - highest priority item in the priority queue
     * @exception Exception - thrown if the priority queue is empty
     * @modelguid {B373FBA6-BC7E-4907-B241-7E030B0420AE}
     */
    public void enqueue(Object anObject) {
        store.add(anObject);
        // re-prioritize
        Collections.sort(store, comp);
    }

	/** @modelguid {D32360A9-EA27-4E60-9EE9-01679BE3976F} */
    public void setComparator(Comparator c) {
        this.comp = c;
    }

    /*
     * Removes and returns the highest priority item in the priority queue.
     * @return Object - highest priority item in the priority queue
     * @exception Exception - thrown if the priority queue is empty
     * @modelguid {F162CE73-D3A3-4D93-87B0-88019B4F73B9}
     */
    public Object removeMax() throws Exception {
        Object obj = peekBack();
        store.remove(obj);
        return obj;
    }

}

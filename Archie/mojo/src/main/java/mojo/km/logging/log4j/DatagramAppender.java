/* Generated by Together */

package mojo.km.logging.log4j;

import org.apache.log4j.WriterAppender;
import java.io.OutputStream;
import mojo.km.dispatch.IDispatch;
import org.apache.log4j.Layout;
import mojo.km.messaging.IEvent;
import java.io.Serializable;
import mojo.km.context.ContextManager;

/**
 * Responsible for implementing a new log4j appender that uses datagrams to
 * write to a central logging location.
 *
 * @see mojo.km.service.Logging.LoggingService
 * @author Eric A Amundson
 * @modelguid {6BCE986D-807F-475E-8ADD-F6E8C399A4ED}
 */
public class DatagramAppender extends WriterAppender {
	/** @modelguid {4A119075-DE49-4707-A7B7-884414DF567D} */
    public DatagramAppender() {
        setWriter(createWriter(new DatagramWriter()));
    }

    /** @param layout - layout 
     * @modelguid {ADDB0498-A404-4B7E-AAD4-751AFBD4ABA7}
     */
    public DatagramAppender(Layout layout) {
        this.layout = layout;
        setWriter(createWriter(new DatagramWriter()));
    }

    /**
     * Get host URL of receiver of log events.
     * @modelguid {5523B41C-5466-49CF-B05B-6414816484E2}
     */
    public String getURL() {
        return URL;
    }

    /**
     * Set host URL of receiver of log event.
     * @modelguid {B4F969B5-AB8B-4B7C-A5E8-D91CA57863BB}
     */
    public void setURL(String URL) {
        this.URL = URL;
    }

    /**
     * Use to set the output location of host.
     * @modelguid {C1F7AE07-D486-4941-8321-E5B51CAA1B25}
     */
    private String URL = null;

	/** @modelguid {676078F3-A9AE-44B5-8AFC-733809BE28B7} */
    class DatagramWriter extends OutputStream {
        /** @param i - i 
         * @modelguid {70B3BBA1-59CF-4FE4-8F13-132D6462F7E5}
         */
        public void write(int i) {
            init();
            byte[] bytes = new byte[1];
            bytes[0] = (byte)i;
            write(bytes);
        }

        /** @param param - param 
         * @modelguid {1189517A-EF5F-4F23-AB3A-8DC3535B60CB}
         */
        public void write(byte[] param) {
            init();
            StringBuffer outMsg = new StringBuffer();
            if (ContextManager.getServerName() != null && ContextManager.getServerName().equals("SwingController")) {
                return;
            }
             outMsg.append(ContextManager.getServerName() );
             outMsg.append(" : ");
			if (ContextManager.getCurrentUser() != null && !ContextManager.getCurrentUser().equals("")) {
				outMsg.append(ContextManager.getCurrentUser());
				outMsg.append(" : ");
			}
            String msgBuff = new String( param );
            outMsg.append( msgBuff );
            LogEvent event = new LogEvent(outMsg.toString().getBytes());
            mEventManager.postEvent(event);
        }

        /**
         * @param b - b
         * @param off - off
         * @param len - len
         * @modelguid {C395E040-7CA8-45E5-892D-CAF02CC4183B}
         */
        public void write(byte[] b, int off, int len) {
            init();
            if (b == null) {
                throw new NullPointerException();
            } else if ((off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) || ((off + len) < 0)) {
                throw new IndexOutOfBoundsException();
            } else if (len == 0) {
                return;
            }
            byte[] out = new byte[len];
            System.arraycopy(b, off, out, 0, len);
            write(out);
        }

		/** @modelguid {DE554C22-55FB-4DEC-9206-3408590F0F27} */
        public void flush() {
        }

		/** @modelguid {14BAD00E-06F8-492B-A558-A37705D78FE1} */
        public void close() {
        }

		/** @modelguid {F09FB66F-5F45-4164-A73A-F2037EB0C863} */
        private void init() {
            if (mEventManager == null) {
                if (URL == null) {
                    mEventManager = new mojo.km.dispatch.Logging.LoggingMessageStrategy();
                } else {
                    mEventManager = new mojo.km.dispatch.Logging.LoggingMessageStrategy( URL );
                }
            }
        }

		/** @modelguid {C6F32836-8AB1-4527-8AD1-BE10E8E90D8E} */
        IDispatch mEventManager = null;
    }


    /**
     * Implement an IEvent interface to transport log event message.
     * @modelguid {5F43E06F-1E17-4B57-A6DE-57072FA906BF}
     */
    class LogEvent implements IEvent, Serializable {
        /**
         * Construct with input message buffer.
         * @param msg - holds byte buffer with log message.
         * @modelguid {028FF91E-D114-486A-BCC7-96C57FEBEF91}
         */
        public LogEvent(byte[] msg) {
            message = new String(msg);
        }

        /**
         *    Serialize event to string.
         *    @return event data.
         * @modelguid {324EA21C-9869-43C5-A1CE-F6CDAB0AD4CB}
         */
        public String toString() {
            return message;
        }

        /**
         * Implement IEvent interface.
         *     @return hash code.
         * @modelguid {1F61CD25-3262-48FD-BD6B-4A95295B622B}
         */
        public String hashKey() {
            StringBuffer aStr = new StringBuffer(50);
            aStr.append(this.getClass().getName()).toString();
            return aStr.toString();
        }

        /**
         * Return the service id.
         *     @return event topic.
         * @modelguid {33CEC4F6-AD03-4572-916D-B317035DCFFE}
         */
        public String getTopic() {
            return service;
        }

        /**
         *     Set the service the event is to be associated with.
         *     @param topic - topic
         * @modelguid {5F061197-969A-4429-AA5E-B01844A03113}
         */
        public void setTopic(String topic) {
            service = topic;
        }

        /**
         * Return the server context name.
         *     @return server name of event.
         * @modelguid {175658D3-2B54-467D-B6CA-A7F53D1DD32C}
         */
        public String getServer() {
            return mServer;
        }

        /**
         * Set the value of the server context name.
         *     @param server - server
         * @modelguid {91915C72-36A2-4D16-A1C4-C00914A53485}
         */
        public void setServer(String server) {
            mServer = server;
        }

		/** @modelguid {ED5EE2DC-CA8D-457B-930C-A8B61BF0EC07} */
        private String mServer = "";
		/** @modelguid {63AED799-5B88-481B-AB0F-98795A0D900E} */
        private String service;
		/** @modelguid {DD9BE888-C435-41AB-AAF8-0745629E0966} */
        private String message = "";
    }
}

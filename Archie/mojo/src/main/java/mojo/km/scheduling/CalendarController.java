/* Generated by Together */

package mojo.km.scheduling;

import java.util.Date;
import mojo.km.messaging.IEvent;

/**
 * @stereotype control
 * @author Egan Royal
 * @contextManagerName mojo.km.context.TopLinkTransactionalContext.TransactionalContextManager
 * @requestDispatch mojo.km.dispatch.tcpmultiserver.RequestDispatch
 * @replyDispatch mojo.km.dispatch.tcpmultiserver.ReplyDispatch
 * @asyncDispatch mojo.km.dispatch.tcpmultiserver.AsyncRequestStrategy
 * @queueDispatch mojo.km.dispatch.CurrentContext.CurrentContextStrategy
 * @pubSubDispatch mojo.km.dispatch.CurrentContext.CurrentContextStrategy
 * @debugMode true
 * @connectionPool false
 * @workflowEnabled false
 * @dbPassword devuser4
 * @dbUserID devuser4
 * @dbURL jdbc:oracle:thin:@dc-dbdev.dcdirect.com:1521:dcdev
 * @projectClass dcdirectmap
 * @licensePath c:\
 * @TransactionGroups
 * @MaxServers
 * @DataSource
 * @LastAccessed 0
 * @BuildTUXEDOConfig
 * @DriverClass
 * @serverUserID
 * @xaDataSourceClassName
 * @LoginCallback
 * @serverPassword
 * @ClientPubSub mojo.km.dispatch.Multicast.MCPubSubStrategy
 * @serverURL
 * @MinServers
 * @httpURL
 * @Context mojo.km.dispatch.CurrentContext.CurrentContextStrategy
 * @RequestReply mojo.km.dispatch.CurrentContext.CurrentContextStrategy
 * @projectPath
 * @DirtyNotifyMethod
 * @BuildServerConfig
 */
public class CalendarController {

    /**
     * @stereotype design
     * @serviceName regTask
     */
    public void registerTask(String eventTopic, Date firstNotificationDate, Date nextNotificationDate,
        String scheduleClassName, String taskName) {}
    /**
     * @stereotype design
     * @serviceName execTasks
     */
    public void executeTasks() {}

    /**
     * @stereotype design
     * @serviceName startScheduler
     */
    public void startScheduler() {}

    /**
     * @stereotype design
     * @serviceName testTheTest 
     */
    public void unregisterTask(String taskName) {}

	/**
     * @author bcorneli
     * @date 01/10/2003
     * @stereotype design
     * @serviceName updateTask
     */
    public void updateTask(IEvent notificationEvent, Date firstNotificationDate,
        Date nextNotificationDate, String scheduleClassName, String taskName, boolean autoCreate){}

	/**
     * @stereotype design
     * @serviceName cNextDT
     */
    public void calculateNextDate(Date initialDate, String frequency) {}

	/**
     * @stereotype design
     * @serviceName gInDtRcrPmtPrc
     */
    public void getInitialDateForRecurringPaymentProcess(Date nextDate,
                                                         String frequency,
														/*Pass through data*/
 													     String trustOID,
        												 String trustLedgerAccountOID,
                                                         String paymentOID,
                                                         String payorName ,
                                                         String disbursementType,
                                                         String accountNumber,
                                                         String routingNumber ,
                                                         String trusteeOID,
                                                         String payeeOID,
                                                         String payeeBankName,
                                                         String payeeTaxID,
                                                         String bankAccountType) {}
}

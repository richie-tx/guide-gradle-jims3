/* Generated by Together */

package mojo.km.scheduling;
import java.util.Date;
import java.util.Calendar;
/**
*  DailySchedule calculates the next run date based on the FIRST run date.
*  The way it works: creates a Calendar based on today's date, and then resets the
*  hours, minutes, seconds and milliseconds of the calendar
*  to the first run timed date hours, minutes, seconds and milliseconds.
*  THEN 1 day is added to the date.
*
* 	This insures that the next run time date will have the same hours, min, sec, mill sec. as the
*   first run time date.
*
* 	example.
*   First run time: Jan 01 12:05:06:33
*   Today's Date    : Jan 10 10:05:15:44
*   whatis the next run time date? It should be Jan 11 12:05:06:33.
*
*   THIS CODE ASSUME SAME TIMEZONE FOR ITS CALCULATIONS.
* */
public class DailySchedule implements ISchedule{

    public Date getNextRunDate(Date firstNotificationDate){
		Calendar firstNotificationCalendar = Calendar.getInstance();
		firstNotificationCalendar.setTime(firstNotificationDate);
        Calendar currentDateCalendar = Calendar.getInstance();

        currentDateCalendar.set(Calendar.HOUR,firstNotificationCalendar.get(Calendar.HOUR));
		currentDateCalendar.set(Calendar.MINUTE,firstNotificationCalendar.get(Calendar.MINUTE));
		currentDateCalendar.set(Calendar.SECOND,firstNotificationCalendar.get(Calendar.SECOND));
		currentDateCalendar.set(Calendar.MILLISECOND,firstNotificationCalendar.get(Calendar.MILLISECOND));

        currentDateCalendar.add(Calendar.DATE, 1);

        return currentDateCalendar.getTime();

    }
    public boolean isRunDateStillValid( Date runDate ) {
        return true;
    }

}


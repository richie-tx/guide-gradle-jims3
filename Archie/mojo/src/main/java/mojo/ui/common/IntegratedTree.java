/* Generated by Together */

package mojo.ui.common;

import javax.swing.JTree;
import mojo.km.messaging.IEvent;
import java.util.Map;
import java.util.Hashtable;
import mojo.km.context.ICommand;
import mojo.km.utilities.Reflection;
import mojo.km.messaging.EventFactory;
import mojo.km.context.ContextManager;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.event.TreeSelectionListener;
import javax.swing.event.TreeSelectionEvent;
import mojo.ui.common.IntegratedTree.AddNode;
import mojo.ui.common.IntegratedTree.NodeItem;
import mojo.km.dispatch.EventManager;
import javax.swing.tree.TreeNode;

/** Responsible for managing a tree view of hierarchical events. 
 * @modelguid {F23F627E-DDB3-4F00-B380-3146E9CB59A1}
 */
public class IntegratedTree extends JTree implements PropertyComponent, EventCacheable {
    /**
     * Create a new that manipulates mojo interation
     * @param topic - specialized topic.
     * @modelguid {BD862AD3-D039-43F6-B75A-C0521DC23C84}
     */
    public IntegratedTree(String topic, String inboundServiceName, String outboundServiceName, String displayProperty,
        String idProperty, String parentIDProperty) {
            this.setEditable(true);
            this.setShowsRootHandles(true);
            this.topic = topic;
            this.inboundServiceName = inboundServiceName;
            this.outboundServiceName = outboundServiceName;
            this.displayProperty = displayProperty;
            this.idProperty = idProperty;
            this.parentIDProperty = parentIDProperty;
            root = (DefaultMutableTreeNode)this.getDefaultTreeModel().getRoot();
            IEvent event = EventFactory.getInstance(inboundServiceName);
            event.setTopic(topic);
            ContextManager.currentContext().registerEventListener(new AddNode(), event);
            //super.addTreeSelectionListener( last );
    }

	/** @modelguid {4A8C0404-88A3-4AEC-A0B0-862FE5240767} */
    public IntegratedTree(DefaultMutableTreeNode root, String topic, String inboundServiceName, String outboundServiceName,
        String displayProperty, String idProperty, String parentIDProperty) {
            super(root);
            this.setEditable(true);
            this.setShowsRootHandles(true);
            this.topic = topic;
            this.inboundServiceName = inboundServiceName;
            this.outboundServiceName = outboundServiceName;
            this.displayProperty = displayProperty;
            this.idProperty = idProperty;
            this.parentIDProperty = parentIDProperty;
            this.root = root;
            IEvent event = EventFactory.getInstance(inboundServiceName);
            event.setTopic(topic);
            ContextManager.currentContext().registerEventListener(new AddNode(), event);
            //super.addTreeSelectionListener( last );
    }

	/** @modelguid {118DB191-110B-42C1-802C-A020ED592B96} */
    public void setValue(Object value) {
    }

	/** @modelguid {29E839DA-16F8-451B-986C-D2E0FDB6FC86} */
    public String getName() {
        return "";
    }

	/** @modelguid {4A20D855-215F-4DE8-B4AC-8B63AD156553} */
    public void setName(String name) {
    }

	/** @modelguid {57EE9430-3CBF-4C02-9176-07969B8201F8} */
    public void register() {
    }

	/** @modelguid {7C935133-8A51-4FE5-998E-2594E8C2D0D6} */
    public void unregister() {
    }

	/** @modelguid {6DAB2F62-7DF5-4E2F-A66F-13FE57343C41} */
    public void setCache(Map cache) {
        this.cache = cache;
    }

	/** @modelguid {E35706B4-1BC1-457A-B9BE-74A4D4089EEF} */
    public void postEvent(IEvent event) {
    }

	/** @modelguid {08354BDE-0DC1-43AD-84DD-E30F284A6C14} */
    public void sendEvent() {
        DefaultMutableTreeNode selected = (DefaultMutableTreeNode)IntegratedTree.this.getLastSelectedPathComponent();
        NodeItem nodeItem = (NodeItem)selected.getUserObject();
        IEvent event = EventFactory.getInstance(outboundServiceName);
        Reflection.invokeMutatorMethod(event, idProperty, nodeItem.getId());
        EventManager.getSharedInstance(EventManager.REQUEST).postEvent(event);
    }


	/** @modelguid {0CE5B6B0-3EC7-4021-9429-542C0CECEE86} */
    Map cache = null;
	/** @modelguid {739BE514-9C19-4147-8BCF-CF1C89BBDD85} */
    Map nodes = new Hashtable();
	/** @modelguid {C171BBF6-30FC-4829-AC4E-0A3CB28E0314} */
    String parentIDProperty = null;
	/** @modelguid {07124940-1635-4BCB-B78F-C50729DC862F} */
    String idProperty = null;
	/** @modelguid {3ECD7722-B2CF-4F39-A9E3-0A96298E30B1} */
    String displayProperty = null;
	/** @modelguid {3B1535EF-29A1-4616-A1CA-343AD279DC99} */
    String topic = null;
	/** @modelguid {08FD686D-33E0-4C4E-9CC7-F2A462D32B48} */
    String outboundServiceName = null;
	/** @modelguid {4FAC8401-3543-49F3-BE42-146AFB82C8D2} */
    String inboundServiceName = null;
	/** @modelguid {FE5C285E-57D9-45AB-9D9C-941948F24EDD} */
    DefaultMutableTreeNode root = null;
	/** @modelguid {0C474C05-1369-4233-B826-0716F6761401} */
    SelectionListener last = new SelectionListener();

	/** @modelguid {414733EA-2DBA-4950-A0A6-5E0C4DCDF7C0} */
    class SelectionListener implements TreeSelectionListener {
		/** @modelguid {51178248-8365-4519-9971-76925B8ACBBE} */
        public void valueChanged(TreeSelectionEvent selectionEvent) {
            IntegratedTree.this.sendEvent();
        }
    }


	/** @modelguid {9FFB31BF-8C25-45EB-AF0C-CF79B7623AB1} */
    static public class NodeItem {
		/** @modelguid {506379E0-E77D-422C-BA6E-5585BCCBF0DF} */
        NodeItem(String id, String parentID, String displayVal) {
            this.id = id;
            this.parentID = id;
            this.displayVal = displayVal;
        }

		/** @modelguid {54E0B0D1-0C7C-4A7C-9EC2-21492556791D} */
        public String getId() {
            return id;
        }

		/** @modelguid {027C98A8-FD0D-4D1D-8C49-B0EEC8A86783} */
        public void setId(String id) {
            this.id = id;
        }

		/** @modelguid {9CD68882-494D-4DAB-AB3C-F8787900CEEA} */
        public String getParentID() {
            return parentID;
        }

		/** @modelguid {0AD660D7-E338-4C94-B58C-826956A7BB33} */
        public void setParentID(String parentID) {
            this.parentID = parentID;
        }

		/** @modelguid {95D6C500-C320-4AD3-850E-5DE32F77210E} */
        public String toString() { return displayVal; }

		/** @modelguid {BB91808B-DEB4-48DC-88DE-9B4764A7BEDA} */
        private String id = null;
		/** @modelguid {B48766BE-3DD2-4B12-BFDD-5CDB0496DC65} */
        private String parentID = null;
		/** @modelguid {8E20DB95-D112-40EA-8CC5-65969B94C718} */
        private String displayVal = null;
    }


	/** @modelguid {D30A007B-23B5-4B66-8906-736574BBD641} */
    class AddNode implements ICommand {
		/** @modelguid {B463EA60-A1AB-4E8D-8F19-9B0C1437D87B} */
        public void execute(IEvent event) throws Exception {
            String parentID = "" + Reflection.invokeAccessorMethod(event, parentIDProperty);
            String id = "" + Reflection.invokeAccessorMethod(event, idProperty);
            String displayVal = "" + Reflection.invokeAccessorMethod(event, displayProperty);
            NodeItem nodeItem = new NodeItem(id, parentID, displayVal);
            DefaultMutableTreeNode node = new DefaultMutableTreeNode(nodeItem);
            if (parentID != null && !parentID.equals("") && !parentID.equals("null")) {
                DefaultMutableTreeNode parent = (DefaultMutableTreeNode)nodes.get(parentID);
                parent.add(node);
                nodes.put(id, node);
            } else {
                root.add(node);
                nodes.put(id, node);
            }
            IntegratedTree.this.repaint();
        }

		/** @modelguid {2D55E519-2E5F-4466-94E1-72187B33AB06} */
        public void onRegister(IEvent event) {
        }

		/** @modelguid {1AAD7268-D13A-4B4F-A900-8B9F5A101A7E} */
        public void onUnregister(IEvent event) {
        }

		/** @modelguid {46152330-04ED-423E-B333-68B9BDDE5E8F} */
        public void update(Object updateObject) {
        }
    }
}

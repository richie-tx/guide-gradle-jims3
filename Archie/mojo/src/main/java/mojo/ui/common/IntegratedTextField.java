/* Generated by Together */

package mojo.ui.common;

import javax.swing.JTextField;
import mojo.km.messaging.IEvent;
import java.util.Map;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import mojo.km.utilities.Reflection;
import javax.swing.event.AncestorListener;
import javax.swing.event.AncestorEvent;
/**
* Responsible for handling display a individual property of an specified bean object
* by name.
*
* @author Eric A Amundson
* @version 1.0
* @modelguid {F767BEB7-D93D-41C5-AAFB-7A70FC689B01}
 */
public class IntegratedTextField extends JTextField implements PropertyComponent, EventCacheable {
    /**
     * Constructor
     * @param topic - inbound event specialized topic.
     * @param inboundServiceName - inbound events service name.
     * @param outboundEvent - the event to populate with property changes define by this component.
     * @param propertyName - name of property being managed.
     * @modelguid {C51CDC10-993B-462C-805F-EC8050101221}
     */
    public IntegratedTextField( String topic, String inboundServiceName, IEvent outboundEvent, String propertyName )
    {
        PropertyComponentManager pPropertyManager = new PropertyComponentManager(topic, inboundServiceName, outboundEvent, this, "text" );
        this.outboundEvent = outboundEvent;
        setName( propertyName );
        register();
    }
	/** @modelguid {1090734F-B255-4757-9A83-8697C282934C} */
    public void setValue(Object value) {
        setText( "" + value );
    }

	/** @modelguid {234E22F4-8852-44A2-9693-412E240E253A} */
    public String getName() {
        return name;
    }

	/** @modelguid {FD0D2ACB-9920-47F6-BC37-B057201A0264} */
    public void setName(String name) {
        this.name = name;
    }

	/** @modelguid {B89598DC-C0E7-4B65-B614-8190EF2D8318} */
    public void setCache(Map cache) {
        this.cache = cache;
    }

	/** @modelguid {0161B0EC-D49B-4A03-A27C-A529B77B09BD} */
    public void postEvent(IEvent event) {
        cache.put(event, event);
    }

	/** @modelguid {F3F5FF63-EA71-43BD-A1D4-ADAC31D22F9F} */
    public void unregister() {
		this.removeFocusListener( dChange );
    }

	/** @modelguid {83489883-B48A-4EA8-8064-BFBADBEB4F13} */
    public void register() {
		this.addFocusListener( dChange );
    }

	/** @modelguid {3063F724-EE25-477C-9812-59E4B71C021E} */
    private String name = "";
	/** @modelguid {1EB5A428-BE5F-46D3-91D8-B2C6E34FEF23} */
    Map cache = null;
	/** @modelguid {653BC782-9C8C-4E35-9D4A-52C8AB8A8D32} */
    IEvent outboundEvent = null;
	/** @modelguid {C9FAB4F3-C8BF-4156-A097-0A20BAEDA93F} */
    DataChange dChange = new DataChange();


	/** @modelguid {48DE32BB-B0F7-4F77-8CD4-E41143104D1D} */
    class DataChange extends FocusAdapter {
		/** @modelguid {25BB9444-EF5E-477F-BF83-DD29440FB312} */
        public void focusLost(FocusEvent event) {
            super.focusLost(event);
			Reflection.invokeMutatorMethod( outboundEvent, name, IntegratedTextField.this.getText() );
			IntegratedTextField.this.postEvent( outboundEvent );
        }
    }


	/** @modelguid {4126D1AB-A218-40BD-A57B-0E5C6A97A451} */
    class HandleVisiblity implements AncestorListener {


		/** @modelguid {4BACF6A9-4A0B-4FD9-8EF7-C67426B07382} */
        public void ancestorAdded(AncestorEvent event) {
        }

		/** @modelguid {6BEF6D03-6941-46CB-A91B-5842E1ADF05E} */
        public void ancestorRemoved(AncestorEvent event) {
            IntegratedTextField.this.unregister();
        }

		/** @modelguid {39D7EF56-AA72-4E0F-BB7E-8E9FDC07EFC5} */
        public void ancestorMoved(AncestorEvent event) {
        }
    }
}
